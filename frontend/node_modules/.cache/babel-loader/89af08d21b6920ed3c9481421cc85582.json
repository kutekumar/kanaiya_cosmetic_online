{"ast":null,"code":"import _slicedToArray from\"/home/kumar/KUMAR/REACT-JS/E-COMMERENCE/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Link}from\"react-router-dom\";import{Form,Button,Row,Col}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import Message from\"../components/Message\";import Loader from\"../components/Loader\";import FormContainer from\"../components/FormContainer\";import{register}from\"../actions/userActions\";import Meta from\"../components/Meta\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RegisterScreen=function RegisterScreen(_ref){var location=_ref.location,history=_ref.history;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var dispatch=useDispatch();var userRegister=useSelector(function(state){return state.userRegister;});var loading=userRegister.loading,error=userRegister.error,userInfo=userRegister.userInfo;var redirect=location.search?location.search.split(\"=\")[1]:\"/\";useEffect(function(){if(userInfo){history.push(redirect);}},[history,userInfo,redirect]);var submitHandler=function submitHandler(e){e.preventDefault();if(password!==confirmPassword){setMessage(\"Passwords do not match.\");}else{dispatch(register(name,email,password));}};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(Meta,{title:\"Sign Up\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"SING UP\"}),message&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:message}),error&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}),loading&&/*#__PURE__*/_jsx(Loader,{}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter Your Name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Enter password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"confirmPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Confirm password\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{className:\"my-3\",type:\"submit\",variant:\"primary\",children:\"Register\"})]}),/*#__PURE__*/_jsx(Row,{className:\"py-1\",children:/*#__PURE__*/_jsxs(Col,{children:[\"Have an account?\",\" \",/*#__PURE__*/_jsx(Link,{to:redirect?\"/login?redirect=\".concat(redirect):\"/login\",children:\"Login\"})]})})]});};export default RegisterScreen;","map":{"version":3,"sources":["/home/kumar/KUMAR/REACT-JS/E-COMMERENCE/frontend/src/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","FormContainer","register","Meta","RegisterScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userRegister","state","loading","error","userInfo","redirect","search","split","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { register } from \"../actions/userActions\";\nimport Meta from \"../components/Meta\";\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match.\");\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <Meta title='Sign Up' />\n      <h1>SING UP</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter Your Name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\n        </Form.Group>\n\n        <Button className='my-3' type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n      <Row className='py-1'>\n        <Col>\n          Have an account?{\" \"}\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n"]},"metadata":{},"sourceType":"module"}