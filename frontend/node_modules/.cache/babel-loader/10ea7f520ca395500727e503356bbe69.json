{"ast":null,"code":"import axios from \"axios\";\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_PAY_REQUEST, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL } from \"../constants/orderConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/kumar/KUMAR/REACT-JS/E-COMMERENCE/kumars-onlineshop/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_FAIL","ORDER_PAY_SUCCESS","ORDER_PAY_REQUEST","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","token","data","post","payload","error","response","message","getOrderDetails","id","Authorization","get","payOrder","orderId","paymentResult","put","listMyOrders"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n} from \"../constants/orderConstants\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/orders`, order, config);\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const payOrder =\n  (orderId, paymentResult) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ORDER_PAY_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `/api/orders/${orderId}/pay`,\n        paymentResult,\n        config\n      );\n\n      dispatch({\n        type: ORDER_PAY_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_PAY_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}