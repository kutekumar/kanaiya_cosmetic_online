{"ast":null,"code":"var _jsxFileName = \"/home/kumar/KUMAR/REACT-JS/E-COMMERENCE/kumars-onlineshop/src/screens/UserListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listUsers } from \"../actions/userActions\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserListScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const userList = useSelector(state => state.userList);\n  const {\n    loading,\n    error,\n    users\n  } = userList;\n  useEffect(() => {\n    dispatch(listUsers());\n  }, [dispatch]);\n\n  const deleteHandler = id => {\n    console.log(\"Delete User\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      stripped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      className: \"table-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"EMAIL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ADMIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `mailto:${user.email}`,\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.isAdmin ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n              style: {\n                color: \"green\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(CancelIcon, {\n              style: {\n                color: \"red\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(LinkContainer, {\n              to: `/user/${user._id}/edit`,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"light\",\n                className: \"btn-sm\",\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(LinkContainer, {\n              to: `/user/${user._id}/delete`,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                className: \"btn-sm\",\n                onClick: () => deleteHandler(user._id),\n                children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n                  style: {\n                    fontColor: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserListScreen, \"+TOZS+45e+au/c9E1I6+WzRrxaY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserListScreen;\nexport default UserListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserListScreen\");","map":{"version":3,"sources":["/home/kumar/KUMAR/REACT-JS/E-COMMERENCE/kumars-onlineshop/src/screens/UserListScreen.js"],"names":["React","useEffect","LinkContainer","Table","Button","useDispatch","useSelector","Message","Loader","listUsers","CancelIcon","CheckCircleIcon","DeleteForeverIcon","EditIcon","UserListScreen","dispatch","userList","state","loading","error","users","deleteHandler","id","console","log","map","user","_id","name","email","isAdmin","color","fontColor"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listUsers } from \"../actions/userActions\";\n\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst UserListScreen = () => {\n  const dispatch = useDispatch();\n\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n  useEffect(() => {\n    dispatch(listUsers());\n  }, [dispatch]);\n\n  const deleteHandler = (id) => {\n    console.log(\"Delete User\");\n  };\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table stripped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <CheckCircleIcon style={{ color: \"green\" }} />\n                  ) : (\n                    <CancelIcon style={{ color: \"red\" }} />\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <EditIcon />\n                    </Button>\n                  </LinkContainer>\n                  <LinkContainer to={`/user/${user._id}/delete`}>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(user._id)}>\n                      <DeleteForeverIcon style={{ fontColor: \"red\" }} />\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default UserListScreen;\n"]},"metadata":{},"sourceType":"module"}